{"remainingRequest":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/src/App.vue","mtime":1615908974087},{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/codeclan_work/my_work/PDA/Juan_calculator/calculator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMSwKaDIgewogIGZvbnQtd2VpZ2h0OiBub3JtYWw7Cn0KCi5jYWxjdWxhdG9yIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGVkZWRlOwogIGJvcmRlcjogMXB4IHNvbGlkICNkZWRlZGU7CiAgd2lkdGg6IDIwZW07CiAgaGVpZ2h0OiAzMGVtOwogIG1hcmdpbjogMCBhdXRvOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9CgouZGlzcGxheSB7CiAgcGFkZGluZzogMTVweDsKICBtYXJnaW46IDE1cHg7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgZm9udC1zaXplOiAxLjVlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlOwogIGhlaWdodDogMS4yZW07Cn0KCi5idXR0b25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBwYWRkaW5nOiAxMHB4Owp9CgouYnV0dG9ucyBidXR0b24gewogIGZsZXgtZ3JvdzogMTsKICBiYWNrZ3JvdW5kLWNvbG9yOmdyZXk7CiAgZm9udC1zaXplOiAxLjFlbTsKICBjb2xvcjogd2hpdGU7CiAgd2lkdGg6IDMuNWVtOwogIGhlaWdodDogMy41ZW07CiAgcGFkZGluZzogNXB4OwogIG1hcmdpbjogNXB4OwogIGJvcmRlci1yYWRpdXM6IDEwcHg7Cn0KCgoKLm9uZSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWdyb3c6IDE7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>{{ msg }}</h1>\n    <div class=\"calculator\">\n      <div class=\"display\">{{ runningTotal }}</div>\n      <calculator />\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport Calculator from '@/components/Calculator.vue';\nimport {eventBus} from '@/main.js';\n\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      msg: \"Calculator\",\n      previousTotal: 0,\n      runningTotal: 0,\n      previousOperator: null,\n      newTotal: true,\n    };\n  },\n  components: {\n    'calculator': Calculator\n  },\n  mounted(){\n    eventBus.$on('number-clicked', number => this.numberClick(number))\n    eventBus.$on('clear-clicked', () => this.clearClick())\n    eventBus.$on('operator-clicked', operator => this.operatorClick(operator))\n\n  },\n  methods: {\n    numberClick: function (number) {\n      if (this.runningTotal === 0 || this.newTotal) {\n        this.runningTotal = \"\";\n        this.newTotal = false;\n      }\n      // concatenate the clicked number to the running total\n      this.runningTotal = parseFloat(\"\" + this.runningTotal + number);\n    },\n    clearClick: function () {\n      if (this.runningTotal == 0) {\n        this.previousOperator = null;\n        this.previousTotal = null;\n      }\n      this.runningTotal = 0;\n    },\n    operatorClick: function (operator) {\n      // if there was a previous operator recorded as having been clicked, perform\n      // the operation for the previous operator\n      if (this.previousTotal && this.previousOperator) {\n        switch (this.previousOperator) {\n          case \"+\":\n            this.add(this.runningTotal);\n            break;\n          case \"-\":\n            this.subtract(this.runningTotal);\n            break;\n          case \"*\":\n            this.multiply(this.runningTotal);\n            break;\n          case \"/\":\n            this.divide(this.runningTotal);\n            break;\n        }\n      }\n\n      // if the 'equals' button was clicked, clear the previous operator, otherwise\n      // record what the previous operator was\n      if (operator == \"=\") {\n        this.previousOperator = null;\n      } else {\n        this.previousOperator = operator;\n      }\n      // replace the previous total with the current running total and flag that a\n      // new total has been calculated\n\n      this.previousTotal = this.runningTotal;\n      this.newTotal = true;\n    },\n    add(number) {\n      this.runningTotal = parseFloat(this.previousTotal) + parseFloat(number);\n    },\n    subtract(number) {\n      this.runningTotal = parseFloat(this.previousTotal) - parseFloat(number);\n    },\n    multiply(number) {\n      this.runningTotal = parseFloat(this.previousTotal) * parseFloat(number);\n    },\n    divide(number) {\n      this.runningTotal = parseFloat(this.previousTotal) / parseFloat(number);\n    },\n  },\n};\n</script>\n\n<style scoped>\nh1,\nh2 {\n  font-weight: normal;\n}\n\n.calculator {\n  background-color: #dedede;\n  border: 1px solid #dedede;\n  width: 20em;\n  height: 30em;\n  margin: 0 auto;\n  text-align: left;\n  border-radius: 5px;\n}\n\n.display {\n  padding: 15px;\n  margin: 15px;\n  text-align: right;\n  font-size: 1.5em;\n  background-color: #fefefe;\n  height: 1.2em;\n}\n\n.buttons {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px;\n}\n\n.buttons button {\n  flex-grow: 1;\n  background-color:grey;\n  font-size: 1.1em;\n  color: white;\n  width: 3.5em;\n  height: 3.5em;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 10px;\n}\n\n\n\n.one {\n  display: flex;\n  flex-grow: 1;\n}\n</style>"]}]}